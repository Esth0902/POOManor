@page "/MapRDC"
<div class="gestionvie">
    <p><img src="images/HeroF.png" class="Personnage" />&nbsp; &nbsp; &nbsp; &nbsp;Point de vie :&nbsp; &nbsp; &nbsp; &nbsp;Point de dégat :&nbsp; &nbsp; &nbsp; &nbsp;Point de défense : </p>
</div>

<NavLink href="/MapGrenier"> grenier </NavLink>

<div @onkeydown="HandleKeyDown" tabindex="0" class="mapRDC" > 
    @for (int row = 0; row < 10; row++) //Capture les évènements clavier et Création des lines
    {
    <div class="row">
        @for (int col = 0; col < 20; col++)  //Création des colonnes 
        {
            <div class="cell">
                @if (MonstersList.Any(m => m.PositionX == col && m.PositionY == row && m.Alive())) //recherche les monstres présents dans le tableau
                {
                    var monster = MonstersList.First(m => m.PositionX == col && m.PositionY == row && m.Alive());
                    <img src="@monster.Image" alt="@monster.Name" class="monster" /> //si monstre vivant trouvé dans la cellule, affichage de son image
                }
                else if (row == 3 && col == 5 && !TresorTrouve) //  afficher le coffre
                {
                    <img src="images/coffre.png" class="coffreimage" />
                    
                }
                else if (TresorTrouve && row == 3 && col == 5) // Affiche l'image aléatoire si le trésor est trouvé
                {
                    <img src="@TresorImage" class="TresorImage" />
                }
                else if (row == PlayerPositionY && col == PlayerPositionX) 
                {
                    <img src="images/HeroF.png" class="hero"/>
                }
            </div>
        }
    </div>
    }
</div>

<div class="prompt">
    @if (TresorTrouve)
    {
        <p>@TresorTexte</p>
    }
</div>

@code {
    private List<Monsters> MonstersList { get; set; } //initialise la liste des monstres
    private bool StopMoving { get; set; } = false; //stopmoving initialisé à "false"
    private int PlayerPositionX { get; set; } = 4; // position initiale du héros
    private int PlayerPositionY { get; set; } = 7; // position initiale du héros
    private bool TresorTrouve { get; set; } = false; // Indique si le trésor a été trouvé
    private string TresorImage { get; set; } // Image aléatoire du trésor
    private string TresorTexte { get; set; } // Texte du trésor

    protected override void OnInitialized()
    {
        MonstersList = new List<Monsters> // créer la liste des monstres présents sur la carte
        {
            //new Zombie("Zombie1_1", 4, 2),
            //new Zombie("Zombie1_2", 4, 2),
            new Zombie("Zombie2_1", 14, 2),
            new Zombie("Zombie2_2", 14, 2),
            //new Zombie("Zombie3_1", 4, 7),
            //new Zombie("Zombie3_2", 4, 7),
            new Zombie("Zombie4_1", 19, 7),
            new Zombie("Zombie4_2", 19, 7),
        };

    }

    private async Task MoveMonsters()
    {
        var random = new Random();
        while (!StopMoving) //tant que "stopmoving" est différent de true
        {
            foreach (var monster in MonstersList)
            {
                int direction = random.Next(4); //valeur aléatoire entre 0 et 3 pour déterminer la direction
                switch (direction)
                {
                    case 0: // vers le haut
                        if (monster.PositionY > 0) //s'il n'est pas déjà tout en haut, monte d'une case
                            monster.PositionY--;
                        break;
                    case 1: // vers le bas
                        if (monster.PositionY < 9) //s'il n'est pas déjà tout en bas, descend d'une case
                            monster.PositionY++;
                        break;
                    case 2: // vers la gauche
                        if (monster.PositionX > 0) //s'il n'est pas déjà tout à gauche, change d'une case vers la gauche
                            monster.PositionX--;
                        break;
                    case 3: // vers la droite
                        if (monster.PositionX < 19) //s'il n'est pas déjà tout à droite, change d'une case vers la droite
                            monster.PositionX++;
                        break;

                }
                
            }

            StateHasChanged(); // Rafraîchit la map après chaque déplacement des monstres
            await Task.Delay(2000); // le fait toutes les secondes
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await MoveMonsters();
        }
    }

    public void StopMovement() //pour arrêter les déplacements des monstres
    {
        StopMoving = true;
    }

    private void HandleKeyDown(KeyboardEventArgs e) // Méthode pour gérer l'évènement clavier  
    {
        switch (e.Key)
        {
            case "ArrowUp":
                if (PlayerPositionY > 0) PlayerPositionY--;
                break;
            case "ArrowDown":
                if (PlayerPositionY < 9) PlayerPositionY++;
                break;
            case "ArrowLeft":
                if (PlayerPositionX > 0) PlayerPositionX--;
                break;
            case "ArrowRight":
                if (PlayerPositionX < 19) PlayerPositionX++;
                break;
        }
        if (PlayerPositionX == 5 && PlayerPositionY == 3 && !TresorTrouve)
        {
            TresorTrouve = true;
            SelectRandomTreasure();
        }
        
        StateHasChanged(); // Rafraîchit la map après chaque déplacement
    }
    private void SelectRandomTreasure()
    {
        Coffre monCoffre = new Coffre();
        var objetAleatoire = monCoffre.ChoisirObjet();

        if (objetAleatoire is Armures armure)
        {
            TresorImage = armure.Image;
            TresorTexte = $"Vous avez trouvé {armure.Nom} qui vous procure {armure.PointDefense} point(s) de défense supplémentaire !";
        }
        else if (objetAleatoire is Armes arme)
        {
            TresorImage = arme.Image;
            TresorTexte = $"Vous avez trouvé {arme.Nom} qui vous procure {arme.Pointdegats} point(s) de dégats supplémentaire !";

        }
        else if (objetAleatoire is Potions potions)
        {
            TresorImage = potions.Image;
            TresorTexte = $"Vous avez trouvé {potions.Nom} qui vous procure {potions.Pointdevie} point(s) de vie supplémentaire !";
        }
        else if (objetAleatoire is DiversItems diversItems)
        {
            TresorImage = diversItems.Image;
            TresorTexte = $"Vous avez trouvé {diversItems.Nom} !";
        }
}}